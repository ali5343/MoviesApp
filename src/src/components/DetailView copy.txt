// components/DetailView.jsx
import { useState } from 'react';
import { FaPlay, FaShare, FaBookmark, FaTimes, FaWhatsapp, FaFacebook, FaTwitter, FaInstagram, FaLink } from 'react-icons/fa';
import Footer from './Footer';

const DetailView = ({ show, onClose }) => {
  const [activeTab, setActiveTab] = useState('episodes');
  const [isVideoPlaying, setIsVideoPlaying] = useState(false);
  const [videoUrl, setVideoUrl] = useState('');
  const [isSharePopupOpen, setIsSharePopupOpen] = useState(false);
  const [currentEpisode, setCurrentEpisode] = useState(null);
  const currentUrl = window.location.href;

  // Group episodes by season if needed
  const episodes = Array.from({ length: 24 }, (_, i) => ({
    id: i + 1,
    number: i + 1,
    title: `${show.title} Episode ${i + 1}`,
    thumbnail: `https://picsum.photos/400/225?random=${i + 100}`,
    duration: '45 min',
    hasPreview: (i + 1) % 2 === 0, // Every other episode has a preview
  }));

  const handleWatchEpisode = (episodeNumber) => {
    setIsVideoPlaying(true);
    setVideoUrl('https://geo.dailymotion.com/player.html?video=x9asjji');
    setCurrentEpisode(episodeNumber);
    
    // Scroll to top of page when video starts
    window.scrollTo({ top: 0, behavior: 'smooth' });
  };

  const handleCloseVideoPlayer = () => {
    setIsVideoPlaying(false);
    setVideoUrl('');
    setCurrentEpisode(null);
  };

  const handleShareClick = () => {
    setIsSharePopupOpen(true);
  };

  const handleCloseSharePopup = () => {
    setIsSharePopupOpen(false);
  };

  const shareOnWhatsApp = () => {
    window.open(`https://wa.me/?text=${encodeURIComponent(`Check out this: ${currentUrl}`)}`, '_blank');
    setIsSharePopupOpen(false);
  };

  const shareOnFacebook = () => {
    window.open(`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(currentUrl)}`, '_blank');
    setIsSharePopupOpen(false);
  };

  const shareOnTwitter = () => {
    window.open(`https://twitter.com/intent/tweet?url=${encodeURIComponent(currentUrl)}&text=${encodeURIComponent(`Check out this!`)}`, '_blank');
    setIsSharePopupOpen(false);
  };

  const shareOnInstagram = () => {
    alert('Sharing to Instagram via a direct link is not directly supported. Please copy the link and share it manually.');
    setIsSharePopupOpen(false);
  };

  const copyToClipboard = () => {
    navigator.clipboard.writeText(currentUrl);
    alert('Link copied to clipboard!');
    setIsSharePopupOpen(false);
  };

  return (
    <div className="fixed inset-0 bg-black z-50 overflow-y-auto">
      {/* Header with back button - fixed at top */}
      <div className="sticky top-0 bg-black z-20 p-4 shadow-md">
        <button
          onClick={onClose}
          className="text-white text-lg hover:text-green-400 flex items-center"
        >
          ← Back
        </button>
      </div>

      {/* Share Popup */}
      {isSharePopupOpen && (
        <div className="fixed top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-gray-800 rounded-md shadow-lg p-6 z-50">
          <h2 className="text-white text-lg font-semibold mb-4">Share Via</h2>
          <div className="grid grid-cols-3 gap-4">
            <button onClick={shareOnWhatsApp} className="flex flex-col items-center text-green-500 hover:text-green-400">
              <FaWhatsapp className="text-2xl mb-1" />
              <span className="text-xs text-white">WhatsApp</span>
            </button>
            <button onClick={shareOnFacebook} className="flex flex-col items-center text-blue-500 hover:text-blue-400">
              <FaFacebook className="text-2xl mb-1" />
              <span className="text-xs text-white">Facebook</span>
            </button>
            <button onClick={shareOnTwitter} className="flex flex-col items-center text-blue-400 hover:text-blue-300">
              <FaTwitter className="text-2xl mb-1" />
              <span className="text-xs text-white">X.com</span>
            </button>
            <button onClick={shareOnInstagram} className="flex flex-col items-center text-purple-500 hover:text-purple-400">
              <FaInstagram className="text-2xl mb-1" />
              <span className="text-xs text-white">Instagram</span>
            </button>
            <button onClick={copyToClipboard} className="flex flex-col items-center text-gray-300 hover:text-gray-200">
              <FaLink className="text-2xl mb-1" />
              <span className="text-xs text-white">Copy Link</span>
            </button>
            <button onClick={handleCloseSharePopup} className="text-red-500 hover:text-red-400 absolute top-2 right-2">
              <FaTimes />
            </button>
          </div>
        </div>
      )}

      {/* Main content */}
      <div className="w-full">
        {/* Video Player Section - Only shown when watching an episode */}
        {isVideoPlaying && (
          <div className="w-full bg-black">
            <div className="w-full aspect-video relative">
              <iframe
                src={videoUrl}
                title="Video Player"
                width="100%"
                height="100%"
                frameBorder="0"
                allowFullScreen
              ></iframe>
              <button
                onClick={handleCloseVideoPlayer}
                className="absolute top-4 right-4 text-white text-lg bg-black/50 p-2 rounded-full hover:bg-black/70"
              >
                <FaTimes />
              </button>
            </div>
            
            {currentEpisode && (
              <div className="bg-gray-900 text-white p-4 border-b border-gray-800">
                <h2 className="text-xl font-bold">{show.title} - Episode {currentEpisode}</h2>
                <div className="flex items-center mt-2 text-sm text-gray-400">
                  <span className="mr-4">Season 1</span>
                  <span>45 min</span>
                </div>
              </div>
            )}
          </div>
        )}

        {/* Hero banner - Only shown when NOT watching a video */}
        {!isVideoPlaying && (
          <div className="relative">
            <div className="relative h-[40vh]">
              <img
                src={show.image || "https://picsum.photos/1200/600?random=1"}
                alt={show.title}
                className="w-full h-full object-cover"
              />
              <div className="absolute inset-0 bg-gradient-to-t from-black via-black/50 to-transparent"></div>
            </div>

            {/* Show information overlay */}
            <div className="absolute bottom-0 left-0 w-full p-6">
              <div className="container mx-auto">
                <div className="flex items-end">
                  <div className="mr-6 hidden md:block">
                    <img
                      src={show.poster || "https://picsum.photos/300/450?random=2"}
                      alt={show.title}
                      className="w-32 h-48 object-cover rounded-lg shadow-lg"
                    />
                  </div>

                  <div className="flex-1">
                    <div className="flex flex-wrap gap-2 mb-2">
                      <span className="bg-green-500 text-xs px-2 py-0.5 rounded">HOT</span>
                      <span className="bg-gray-700 text-xs px-2 py-0.5 rounded">HD</span>
                      <span className="border border-gray-700 text-xs px-2 py-0.5 rounded">2023</span>
                      <span className="border border-gray-700 text-xs px-2 py-0.5 rounded">24 Episodes</span>
                    </div>

                    <h1 className="text-3xl font-bold mb-2">{show.title}</h1>

                    <div className="flex items-center space-x-3 text-sm text-gray-300 mb-3">
                      <span className="font-semibold text-white">★ {show.rating}</span>
                      <span>{show.year || "2025"}</span>
                      <span>{show.episodes || "24 Episodes"}</span>
                    </div>

                    <div className="flex flex-wrap gap-3 mb-4">
                      <button
                        className="bg-green-500 hover:bg-green-600 text-white px-6 py-2 rounded-full flex items-center transition"
                        onClick={() => handleWatchEpisode(1)}
                      >
                        <FaPlay className="mr-2" /> Play
                      </button>
                      <button onClick={handleShareClick} className="bg-gray-800 hover:bg-gray-700 text-white px-4 py-2 rounded-full flex items-center transition">
                        <FaShare className="mr-2" /> Share
                      </button>
                      <button className="bg-gray-800 hover:bg-gray-700 text-white px-4 py-2 rounded-full flex items-center transition">
                        <FaBookmark className="mr-2" /> Later
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Show description - Only shown when NOT playing video */}
        {!isVideoPlaying && (
          <div className="bg-gray-900 p-4 border-b border-gray-800">
            <div className="container mx-auto">
              <p className="text-sm text-gray-300">
                {show.description || "\"A Moment But Forever\" is a drama centered around the life of a princess who has been betrayed by those she trusted most. As she navigates court politics and personal vendettas, she finds unexpected allies and perhaps even love. This ancient tale speaks to timeless themes of loyalty, revenge, and the enduring power of truth."}
              </p>
            </div>
          </div>
        )}

        {/* Tabs Navigation */}
        <div className="bg-gray-900 border-b border-gray-800 sticky top-16 z-10">
          <div className="container mx-auto px-4">
            <div className="flex space-x-6">
              <button
                className={`py-4 px-2 text-sm font-medium relative ${activeTab === 'episodes' ? 'text-green-400' : 'text-gray-400 hover:text-white'}`}
                onClick={() => setActiveTab('episodes')}
              >
                Episodes
                {activeTab === 'episodes' && <div className="absolute bottom-0 left-0 right-0 h-0.5 bg-green-400"></div>}
              </button>
              {/* ... other tabs */}
            </div>
          </div>
        </div>

        {/* Episodes Section */}
        <div className="bg-black py-4">
          <div className="container mx-auto px-4">
            {/* Episode Selection Dropdown (Mobile) */}
            <select className="bg-gray-800 text-white rounded p-2 w-full md:w-auto mb-4">
              <option>Episodes 1-24</option>
              {show.seasons && show.seasons.map((season, idx) => (
                <option key={idx}>Season {season.number}</option>
              ))}
            </select>

            {/* Episodes as Buttons */}
            <div className="flex flex-wrap gap-2 mb-6">
              {episodes.map(episode => (
                <button
                  key={episode.id}
                  className={`${currentEpisode === episode.number 
                    ? 'bg-green-500 text-white' 
                    : 'bg-gray-800 hover:bg-gray-700 text-white'} 
                    py-2 px-4 rounded-full text-sm`}
                  onClick={() => handleWatchEpisode(episode.number)}
                >
                  Episode {episode.number}
                </button>
              ))}
            </div>
            
            {/* Episodes as Cards - Similar to iQIYI layout */}
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mt-6">
              {episodes.slice(0, 8).map(episode => (
                <div 
                  key={episode.id}
                  className="cursor-pointer group"
                  onClick={() => handleWatchEpisode(episode.number)}
                >
                  {/* <div className="relative rounded-md overflow-hidden">
                    <img 
                      src={episode.thumbnail}
                      alt={`Episode ${episode.number}`}
                      className="w-full aspect-video object-cover"
                    />
                    <div className="absolute inset-0 bg-black/40 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity">
                      <div className="w-12 h-12 rounded-full bg-green-500/90 flex items-center justify-center">
                        <FaPlay className="text-white" />
                      </div>
                    </div>
                    <div className="absolute bottom-2 right-2 bg-black/70 text-white text-xs px-2 py-1 rounded">
                      {episode.duration}
                    </div>
                  </div>
                  <div className="mt-2">
                    <p className="text-sm font-medium text-white truncate">Episode {episode.number}</p>
                    <p className="text-xs text-gray-400 truncate">{episode.title}</p>
                  </div> */}
                </div>
              ))}
            </div>
          </div>
        </div>

        <Footer />
      </div>
    </div>
  );
};

export default DetailView;